name: CI

on: [push, pull_request]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.dotnet.name }}
    runs-on: ${{ matrix.platform.os }}
    
    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Linux, os: ubuntu-latest }
        - { name: Windows VS2022, os: windows-2022 }
        dotnet:
        - { name: .NET 6, version: '6.0.x' }
        - { name: .NET 7, version: '7.0.x' }

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup .NET ${{ matrix.dotnet.version }} SDK
        id: setup-dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet.version }}
      - name: Enforce SDK Version
        run: dotnet new globaljson --sdk-version ${{ steps.setup-dotnet.outputs.dotnet-version }} --force
      - name: Verify SDK Installation
        run: dotnet --info
      - name: Install Dependencies
        run: dotnet restore AeroMessages/AeroMessages.csproj
      - name: Build
        run: dotnet build AeroMessages/AeroMessages.csproj --configuration Release --no-restore
      - name: Publish
        run: dotnet publish AeroMessages/AeroMessages.csproj --configuration Release --no-restore --output AeroMessages/bin/Publish
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AeroMessages-${{ matrix.platform.os }}-${{ matrix.dotnet.version }}
          path: AeroMessages/bin/Publish/AeroMessages.dll